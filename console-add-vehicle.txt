// ========================================
// COPIE E COLE ESTE C√ìDIGO NO CONSOLE DO NAVEGADOR
// COM O APP RODANDO (MOTORISTA LOGADO)
// ========================================

(async () => {
  console.log('üöó ========== ADICIONANDO VE√çCULO AO MOTORISTA ==========');
  
  // Dados do ve√≠culo (voc√™ pode modificar estes valores)
  const vehicleData = {
    make: 'Toyota',
    model: 'Corolla',
    year: 2020,
    color: 'Branco',
    plate: 'LD-46-11-HE'
  };
  
  try {
    // Buscar perfil atual do AsyncStorage
    const driverAuthData = await window.AsyncStorage.getItem('driver_auth_data');
    const driverProfile = await window.AsyncStorage.getItem('driverProfile');
    
    let currentProfile = null;
    
    if (driverAuthData) {
      currentProfile = JSON.parse(driverAuthData);
      console.log('‚úÖ Perfil encontrado em driver_auth_data');
    } else if (driverProfile) {
      currentProfile = JSON.parse(driverProfile);
      console.log('‚úÖ Perfil encontrado em driverProfile');
    } else {
      console.error('‚ùå Nenhum motorista logado!');
      return;
    }
    
    console.log('üë§ Motorista:', currentProfile.name);
    console.log('üÜî ID:', currentProfile.id);
    console.log('üöô Adicionando ve√≠culo:', vehicleData);
    
    // Criar perfil atualizado com dados do ve√≠culo em m√∫ltiplos formatos
    const updatedProfile = {
      ...currentProfile,
      // Array vehicles (formato preferencial)
      vehicles: [{
        make: vehicleData.make,
        model: vehicleData.model,
        year: vehicleData.year,
        color: vehicleData.color,
        license_plate: vehicleData.plate,
        plate: vehicleData.plate,
        marca: vehicleData.make,
        modelo: vehicleData.model,
        ano: vehicleData.year,
        cor: vehicleData.color,
        placa: vehicleData.plate
      }],
      // Array vehicle (compatibilidade)
      vehicle: [{
        make: vehicleData.make,
        model: vehicleData.model,
        year: vehicleData.year,
        color: vehicleData.color,
        license_plate: vehicleData.plate,
        plate: vehicleData.plate,
        marca: vehicleData.make,
        modelo: vehicleData.model,
        ano: vehicleData.year,
        cor: vehicleData.color,
        placa: vehicleData.plate
      }],
      // Objeto vehicleInfo (compatibilidade)
      vehicleInfo: {
        make: vehicleData.make,
        model: vehicleData.model,
        year: vehicleData.year,
        color: vehicleData.color,
        plate: vehicleData.plate
      },
      // Campos individuais (compatibilidade)
      vehicle_make: vehicleData.make,
      vehicle_model: vehicleData.model,
      vehicle_year: vehicleData.year,
      vehicle_color: vehicleData.color,
      vehicle_plate: vehicleData.plate,
      license_plate: vehicleData.plate,
      // Campos em portugu√™s (compatibilidade)
      marca: vehicleData.make,
      modelo: vehicleData.model,
      ano: vehicleData.year,
      cor: vehicleData.color,
      placa: vehicleData.plate
    };
    
    // Salvar nos dois lugares para garantir
    await window.AsyncStorage.setItem('driver_auth_data', JSON.stringify(updatedProfile));
    await window.AsyncStorage.setItem('driverProfile', JSON.stringify(updatedProfile));
    
    console.log('‚úÖ Ve√≠culo adicionado com sucesso!');
    console.log('üìä === RESUMO ===');
    console.log('‚úÖ Motorista:', updatedProfile.name);
    console.log('‚úÖ Ve√≠culo:', `${vehicleData.make} ${vehicleData.model}`);
    console.log('‚úÖ Placa:', vehicleData.plate);
    console.log('‚úÖ Cor:', vehicleData.color);
    console.log('‚úÖ Ano:', vehicleData.year);
    console.log('\nüîÑ RECARREGUE A P√ÅGINA (F5) PARA VER AS MUDAN√áAS');
    
    // Verificar dados salvos
    const verify = JSON.parse(await window.AsyncStorage.getItem('driver_auth_data'));
    if (verify.vehicles && verify.vehicles.length > 0) {
      console.log('‚úÖ Verifica√ß√£o: Ve√≠culo salvo corretamente!');
      console.log('üöó Dados salvos:', verify.vehicles[0]);
    }
    
  } catch (error) {
    console.error('‚ùå ERRO:', error);
    console.error('Stack:', error.stack);
  }
  
  console.log('========== PROCESSO CONCLU√çDO ==========');
})();
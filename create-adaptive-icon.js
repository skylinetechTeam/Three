// Script para criar um √≠cone adaptativo adequado para Android
// Execute este script se o √≠cone ainda estiver muito grande

const fs = require('fs');
const path = require('path');

console.log('üé® Script para criar √≠cone adaptativo Android');
console.log('');

// Verificar se os arquivos existem
const assetsDir = './assets';
const iconPath = path.join(assetsDir, 'icon.png');
const adaptiveIconPath = path.join(assetsDir, 'adaptive-icon.png');

if (!fs.existsSync(iconPath)) {
  console.error('‚ùå Arquivo icon.png n√£o encontrado em ./assets/');
  process.exit(1);
}

console.log('‚úÖ Arquivo icon.png encontrado');

if (fs.existsSync(adaptiveIconPath)) {
  console.log('‚úÖ Arquivo adaptive-icon.png j√° existe');
} else {
  console.log('‚ö†Ô∏è  Arquivo adaptive-icon.png n√£o encontrado');
}

console.log('');
console.log('üìã Instru√ß√µes para criar um √≠cone adaptativo adequado:');
console.log('');
console.log('1. üñºÔ∏è  TAMANHO CORRETO:');
console.log('   - Canvas: 1024x1024 pixels');
console.log('   - √Årea segura: 720x720 pixels (centro)');
console.log('   - Margem: 152px em cada lado');
console.log('');
console.log('2. üéØ POSICIONAMENTO:');
console.log('   - Logo deve ocupar apenas o centro');
console.log('   - Deixar espa√ßo ao redor (15% de margem)');
console.log('   - N√£o encostar nas bordas');
console.log('');
console.log('3. üé® FORMATO:');
console.log('   - PNG com transpar√™ncia');
console.log('   - Fundo transparente');
console.log('   - Logo centralizado');
console.log('');
console.log('4. üõ†Ô∏è  FERRAMENTAS RECOMENDADAS:');
console.log('   - Canva (online, f√°cil de usar)');
console.log('   - Figma (profissional)');
console.log('   - GIMP (gratuito)');
console.log('   - Photoshop');
console.log('');
console.log('5. üìê TEMPLATE SUGERIDO:');
console.log('   - Crie um quadrado de 1024x1024px');
console.log('   - Adicione guias em 152px de cada lado');
console.log('   - Coloque seu logo na √°rea central (720x720px)');
console.log('   - Redimensione o logo para ~500-600px');
console.log('   - Centralize perfeitamente');
console.log('');
console.log('6. üíæ SALVAR:');
console.log('   - Salve como "adaptive-icon.png"');
console.log('   - Coloque na pasta ./assets/');
console.log('   - Substitua o arquivo existente se houver');
console.log('');
console.log('üöÄ Ap√≥s criar o √≠cone, execute:');
console.log('   npx eas build --platform android --profile preview');
console.log('');
console.log('üì± Teste no dispositivo para verificar o resultado!');

// Verificar configura√ß√£o atual
console.log('');
console.log('üîß Configura√ß√£o atual do app.json:');
try {
  const appJson = JSON.parse(fs.readFileSync('./app.json', 'utf8'));
  const androidConfig = appJson.expo.android;
  
  console.log('   - Background do adaptive icon:', androidConfig.adaptiveIcon?.backgroundColor || 'N√£o definido');
  console.log('   - Imagem do adaptive icon:', androidConfig.adaptiveIcon?.foregroundImage || 'N√£o definido');
  console.log('   - Background do splash:', androidConfig.splash?.backgroundColor || 'N√£o definido');
  
} catch (error) {
  console.error('‚ùå Erro ao ler app.json:', error.message);
}

console.log('');
console.log('‚úÖ Script executado com sucesso!');
console.log('   Siga as instru√ß√µes acima para criar um √≠cone adequado.');
// Teste r√°pido da integra√ß√£o do PricingHelper
const PricingHelper = require('./PricingHelper');

console.log('üß™ TESTE DE INTEGRA√á√ÉO DO PRICINGHELPER');
console.log('========================================');

// Simular os valores reais do seu app
const originalFare = 21200; // Pre√ßo original calculado
const yangoPrice = 17900;   // Pre√ßo da concorr√™ncia 
const vehicleType = 'privado';
const distanceInKm = 100;

console.log('\nüìä DADOS DE ENTRADA:');
console.log(`Pre√ßo original: ${originalFare.toLocaleString()} AOA`);
console.log(`Pre√ßo Yango: ${yangoPrice.toLocaleString()} AOA`);
console.log(`Tipo de ve√≠culo: ${vehicleType}`);
console.log(`Dist√¢ncia: ${distanceInKm} km`);

// Teste 1: Sem pre√ßo da Yango (desconto autom√°tico)
console.log('\n1Ô∏è‚É£ TESTE - SEM PRE√áO YANGO (desconto autom√°tico):');
const automaticPricing = PricingHelper.calculateCompetitivePrice(
    originalFare, 
    null, 
    vehicleType, 
    distanceInKm
);

console.log(`‚úÖ Pre√ßo final: ${automaticPricing.finalPrice.toLocaleString()} AOA`);
console.log(`‚úÖ Economia: ${automaticPricing.savings.toLocaleString()} AOA (${automaticPricing.discountPercentage}%)`);

// Teste 2: Com pre√ßo da Yango
console.log('\n2Ô∏è‚É£ TESTE - COM PRE√áO YANGO (competi√ß√£o direta):');
const competitivePricing = PricingHelper.calculateCompetitivePrice(
    originalFare, 
    yangoPrice, 
    vehicleType, 
    distanceInKm
);

console.log(`‚úÖ Pre√ßo final: ${competitivePricing.finalPrice.toLocaleString()} AOA`);
console.log(`‚úÖ Economia vs Yango: ${competitivePricing.yangoComparison.savings.toLocaleString()} AOA (${competitivePricing.yangoComparison.percentage}% mais barato)`);
console.log(`‚úÖ Economia vs Original: ${competitivePricing.savings.toLocaleString()} AOA (${competitivePricing.discountPercentage}% desconto)`);

// Teste 3: Verificar dados de exibi√ß√£o
console.log('\n3Ô∏è‚É£ TESTE - DADOS PARA UI:');
const displayData = PricingHelper.getDisplayData(originalFare, yangoPrice, vehicleType, distanceInKm);

console.log('üì± Dados formatados para interface:');
console.log(`- Pre√ßo original: ${displayData.original.formatted}`);
console.log(`- Pre√ßo Yango: ${displayData.yango.formatted}`);
console.log(`- Nosso pre√ßo: ${displayData.final.formatted}`);
console.log(`- Economia: ${displayData.savings.formatted} (${displayData.savings.percentage})`);
console.log(`- Mensagem: ${displayData.message}`);
console.log(`- √â competitivo: ${displayData.isCompetitive ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);

console.log('\nüéØ RESULTADO ESPERADO NA INTERFACE:');
console.log(`O modal deve mostrar: ${competitivePricing.finalPrice.toLocaleString()} AOA`);
console.log(`Ao inv√©s de: ${originalFare.toLocaleString()} AOA`);
console.log(`Economia para o usu√°rio: ${competitivePricing.yangoComparison.savings.toLocaleString()} AOA vs Yango`);

console.log('\n‚úÖ INTEGRA√á√ÉO TESTADA COM SUCESSO!');